---
---
@charset "utf-8";
@import "base";

@font-face {
    font-family: 'Karla';
    src: url({{ "/assets/site/fonts/Karla-VariableFont_wght.ttf" | relative_url }}) format('truetype');
}
@font-face {
    font-family: 'Karla';
    font-style: italic;
    src: url({{ "/assets/site/fonts/Karla-Italic-VariableFont_wght.ttf" | relative_url }}) format('truetype');
}
@font-face {
    font-family: 'Fahkwang';
    font-weight: 400;
    src: url({{ "/assets/site/fonts/Fahkwang-Regular.ttf" | relative_url }}) format('truetype');
}
@font-face {
    font-family: 'Fahkwang';
    font-weight: 500;
    src: url({{ "/assets/site/fonts/Fahkwang-Medium.ttf" | relative_url }}) format('truetype');
}
@font-face {
    font-family: 'Fahkwang';
    font-weight: 600;
    src: url({{ "/assets/site/fonts/Fahkwang-SemiBold.ttf" | relative_url }}) format('truetype');
}
@font-face {
    font-family: 'Fahkwang';
    font-weight: 700;
    src: url({{ "/assets/site/fonts/Fahkwang-Bold.ttf" | relative_url }}) format('truetype');
}

:root {
    color: $body-color;
    font-size: 18px;
    @include breakpoint(tablet) {
        font-size: 17px;
    }
    @include breakpoint(mobile) {
        font-size: 16px;
    }
}

html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
    font-synthesis: none;
}

body {
    background-color: $background-color;
    font-family: $body-font;
    letter-spacing: -.01em;
    line-height: $standard-line-height;
}

h1, h2, h3, h4, h5, h6 {
    font-family: $brand-font;
    line-height: $minimum-line-height;
    margin-top: 2rem;
    margin-bottom: 1rem;
    letter-spacing: 0;
    font-weight: 600;
}
html[lang="zh-cn"] :is(h1,h2,h3,h4,h5,h6) {
    font-weight: 800;
}
:is(h1,h2,h3,h4,h5,h6) + :is(h1,h2,h3,h4,h5,h6) {
    margin-top: 1rem;
}
// Used for headers of TOC, and highlight boxes
h5 {
    font-size: 1.05em;
    margin: 0;
    font-weight: 400;
}
@include breakpoint(mobile) {
    h1 { font-size: 1.8em; } // 2
    h2 { font-size: 1.4em; } // 1.5
    h3 { font-size: 1.15em; } // 1.17
    // h4 is 1em in user agent stylesheet.
}
strong { font-weight: 600; }

.logo {
    --logo-dome: #{$logo-dome-color};
    --logo-amalfi: var(--logo-dome);
    --logo-coast: #{$logo-link-color};
    --logo-festival: var(--logo-coast);
    svg:hover {
        --logo-dome: #{$logo-dome-hover-color};
        --logo-amalfi: var(--logo-dome);
        --logo-coast: #{$logo-link-hover-color};
        --logo-festival: var(--logo-coast);
    }
}
body.has-hero .logo:not(footer .logo) {
    --logo-dome: #{$logo-hero-dome-color};
    --logo-coast: #{$logo-hero-link-color};
    svg:hover {
        --logo-dome: #{$logo-hero-dome-hover-color};
        --logo-coast: #{$logo-hero-link-hover-color};
    }
}

body > :is(header,footer) {
    .section-wrapper {
        @include standard-block-behavior;
    }
    .content-wrapper {
        display: flex;
        justify-content: space-between;
    }
    a {
        text-decoration: none;
    }
}

$header-line-height: 1;
body > header {
    --selected-header-section-color: #{$logo-dome-color};
    --header-link-color: #{$logo-link-color};
    --header-link-hover-color: #{$logo-link-hover-color};

    .content-wrapper {
        align-items: center;
        gap: 1em;
        padding-top: .5rem;
        padding-bottom: .6rem;
        border-bottom: border-style-with-color(var(--selected-header-section-color));
    }

    .logo svg {
        aspect-ratio: 3.8727;
        height: 3.4rem;
        @include breakpoint(tablet) {
            height: 3rem;
        }
    }
    a.logo {
        line-height: $header-line-height;
    }
    a {
        color: var(--header-link-color);
        font-weight: 400;
        &:hover {
            color: var(--header-link-hover-color);
            letter-spacing: .076em;
            font-weight: 600;
        }
    }

{%- assign _selected-header = "" -%}
{%- assign _programs = site.empty-array -%}
{%- for _p in site.data.festival.programs -%}
    {%- assign _programs = _programs | push: _p.program-slug -%}
    {%- if _p.zh -%}
        {%- assign _programs = _programs | push: _p.zh -%}
    {%- endif -%}
{%- endfor -%}
{%- for _p in _programs -%}
    {%- assign p = site.programs | where: "slug", _p | first -%}
    {%- assign rp = p -%}
    {%- if p.reference-program-slug -%}
        {%- assign rp = site.programs | where: "slug", p.reference-program-slug | first -%}
    {%- endif -%}
    {%- if p -%}
        {%- assign _selected-header = _selected-header | append: "body." | append: p.slug | append: " > header .link-" | append: rp.slug | append: "," -%}
    {%- endif -%}
{%- endfor -%}
}

#hamburger {
    position: absolute;
    top: 1.3rem;
    right: $minimum-side-padding;
    @include breakpoint(min-desktop) {
        display: none;
    }
    @include breakpoint(mobile) {
        right: $minimum-mobile-side-padding;
    }

    display: inline-block;
    cursor: pointer;
    transition-property: opacity, filter;
    transition-duration: 0.15s;
    transition-delay: 0s, $animation-length;
    transition-timing-function: linear;
    &:is(body.hamburger-active.has-hero #hamburger) {
        transition-delay: 0s, 0s;
    }
    font: inherit;
    color: inherit;
    text-transform: none;
    background-color: transparent;
    border: 0;
    margin: 0;
    overflow: visible;
    -webkit-tap-highlight-color: transparent;
    z-index: 20;

    .hamburger-inner {
        &, &:before, &:after {
            background-color: $brand-blue;
        }
    }

    &:is(body.hamburger-active #hamburger) {
        filter: none;
    }

    $hamburger-width: 24px;
    $hamburger-line: 3px;
    $hamburger-padding: 5px;
    $hamburger-spacing: -8px;
    .hamburger-box {
        box-sizing: content-box;
        width: $hamburger-width;
        height: $hamburger-line * 3 - $hamburger-spacing * 2;
        padding: $hamburger-padding;
        position: relative;
    }

    .hamburger-inner {
        display: block;
        top: 50%;
        margin-top: -2px;

        $background-color-animation-length: $animation-length * 4;
        &, &:before, &:after {
            width: $hamburger-width;
            height: $hamburger-line;
            border-radius: $hamburger-line;
            position: absolute;
            transition-property: transform, background-color;
            transition-duration: 0.15s, $background-color-animation-length;
            transition-timing-function: ease;
        }
        &:before, &:after {
            content: "";
            display: block;
        }
        &:before { top: $hamburger-spacing; }
        &:after { bottom: $hamburger-spacing; }

        transition-duration: 0.075s, $background-color-animation-length;
        transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19), ease;
        filter: none;
        &:before { transition: top 0.075s 0.12s ease, opacity 0.075s ease, background-color $background-color-animation-length ease; }
        &:after { transition: bottom 0.075s 0.12s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color $background-color-animation-length ease; }

        &:is(body.hamburger-active .hamburger-inner) {
            transform: rotate(45deg);
            transition-delay: 0.12s, 0s;
            transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1), ease;
            &:before {
                top: 0;
                opacity: 0;
                transition: top 0.075s ease, opacity 0.075s 0.12s ease, background-color $background-color-animation-length ease;
            }
            &:after {
                bottom: 0;
                transform: rotate(-90deg);
                transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1), background-color $background-color-animation-length ease;
            }
        }
    }
}

#header-mobile {
    display: flex;

    .section-wrapper {
        width: 100%;
    }
    .content-wrapper {
        justify-content: space-between;
    }

    @include breakpoint(min-desktop) {
        display: none;
    }
}

#header-desktop {
    @include breakpoint(tablet) {
        display: none;
    }

    nav {
        flex-grow: 1;
        line-height: $header-line-height;
        display: flex;
        gap: .5em 1.5em;
        justify-content: flex-end;
        padding-bottom: .1rem;
        flex-wrap: wrap;
        text-transform: uppercase;
        font-size: .9em;
        letter-spacing: .1em;
        align-self: flex-end;
        @include breakpoint(tablet) {
            justify-content: center;
            align-self: center;
        }
    }
}
body.has-hero {
    #header-mobile,
    #header-desktop,
    #hamburger {
        --selected-header-section-color: #{$logo-hero-dome-color};
        --header-link-color: #{$logo-hero-link-color};
        --header-link-hover-color: #{$logo-hero-link-hover-color};

        @include hero-shadow-filter;
    }
    #header-mobile,
    #header-desktop {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        width: 100%;
        @include backdrop-filter(blur(1px));
    }
    #hamburger .hamburger-inner {
        &, &:before, &:after {
            background-color: var(--selected-header-section-color);
        }
    }
    #hamburger .hamburger-inner:is(body.hamburger-active .hamburger-inner) {
        &, &:before, &:after {
            background-color: $brand-blue;
        }
    }
}

body.hamburger-active {
    overflow: hidden;
}
#nav-overlay {
    position: fixed;
    z-index: 11;
    display: flex;
    width: 100%;
    left: 0;
    top: 0;
    height: 0;
    opacity: 0;
    transition-property: height, opacity, background-color;
    transition-duration: 0ms, $animation-length * 2, $animation-length * 2;
    transition-delay: $animation-length * 4, $animation-length * 2.5, $animation-length * 2;
    transition-timing-function: ease, linear, ease;
    &:is(body.hamburger-active #nav-overlay) {
        height: 100svh;
        opacity: 1;
        background-color: #{$dark-color}80;
        transition-property: height, opacity, background-color;
        transition-duration: 0ms, $animation-length * 2, $animation-length * 4;
        transition-delay: 0ms, 0ms, 0ms;
    }

    nav {
        width: 100%;
        height: 0;
        letter-spacing: .1em;
        overflow: hidden;
        transition-property: height, overflow;
        transition-duration: $animation-length * 3, 0ms;
        transition-delay: $animation-length * 1, 0ms;
        transition-timing-function: ease-in;
        transition-behavior: allow-discrete;
        background-color: $background-color;
        &:is(body.hamburger-active nav) {
            height: 100svh;
            overflow: scroll;
            transition-property: height, overflow;
            transition-duration: $animation-length * 4, 0ms;
            transition-delay: 0ms, $animation-length * 4;
        }

        > div {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 3rem;
            margin-bottom: 4rem;
            gap: 1.3em;
            font-size: 1.2em;
            @include breakpoint(mobile) {
                font-size: 1.1em;
            }

            div {
                &:not(.lang-selection) {
                    text-transform: uppercase;
                }

                opacity: 0;
                transform: translateY(calc(-.1rem * (9 - var(--counter)))) scale(.7);
                transition-property: opacity, transform;
                transition-duration: $animation-length * 3;
                transition-delay: calc((9 - var(--counter)) * #{$animation-length} * .25);
                transition-linear-function: ease-in-out;
                &:is(body.hamburger-active div) {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                    transition-duration: $animation-length * 3;
                    transition-delay: calc(var(--counter) * #{$animation-length} * .5);
                }
            }
        }

        #mobile-logo {
            margin-bottom: 1rem;
        }
        .logo {
            --logo-dome: #{$logo-dome-color};
            --logo-coast: #{$logo-link-color};
            svg:hover {
                --logo-dome: #{$logo-dome-hover-color};
                --logo-coast: #{$logo-link-hover-color};
            }
        }
        svg {
            height: 5rem;
            @include breakpoint(mobile) {
                height: 4rem;
            }
        }
        .lang-selection {
            font-size: .9em;
            padding-top: 1rem;
            display: flex;
            gap: 1rem;
            a, a:hover {
                letter-spacing: 0;
            }
        }
    }
}

{{ _selected-header }}
body.guests > header .link-guests {
    letter-spacing: .07em;
    font-weight: 600;
    color: var(--selected-header-section-color);
}

body > main {
    margin-top: 3rem;
    margin-bottom: 3rem;
}
body > footer {
    border-top: $border-style;
    font-size: .9em;
    clear: both;
    img {
        filter: saturate(.8) blur(1px);
    }
    #footer-backdrop {
        padding-top: 2rem;
        padding-bottom: 2rem;
        background: linear-gradient(to bottom, #{$background-color + 'e0'}, #{$background-color + 'b0'});
    }
    div.content-wrapper {
        flex-direction: row-reverse;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2rem;
        @include breakpoint(tablet) {
            flex-direction: column;
        }

        > div:nth-of-type(1) {
            flex-grow: 1;
            display: flex;
            flex-wrap: wrap;
            gap: 2rem;
            justify-content: space-evenly;
            @include breakpoint(mobile) {
                > * {
                    align-items: center;
                    text-align: center;
                }
            }
        }
        > div:nth-of-type(2) {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            align-items: center;
            align-self: center;
        }
    }
    .logo svg {
        aspect-ratio: 3.6875;
    }
    svg {
        height: 4.5rem;
        @include breakpoint(tablet) {
            height: 4rem;
        }
        @include breakpoint(tablet) {
            width: min(70vw, 20em);
            height: initial;
        }
    }
    #social {
        display: flex;
        gap: 1.5rem;
        margin-top: 1em;
        a {
            display: block;
            --social-instagram: #{$footer-link-color};
            --social-youtube: #{$footer-link-color};
            --social-facebook: #{$footer-link-color};
            --social-twitter: #{$footer-link-color};

            &:hover {
                --social-instagram: #{$footer-link-hover-color};
                --social-youtube: #{$footer-link-hover-color};
                --social-facebook: #{$footer-link-hover-color};
                --social-twitter: #{$footer-link-hover-color};
            }
        }
        svg {
            width: 1.5em;
            height: 1.5em;
        }
    }
    #copyright {
        font-size: .8em;
    }
    #contact {
        .contact {
            padding-top: .35em;
            @include breakpoint(mobile) {
                padding-top: 0;
            }
            font-size: .9em;
            line-height: $minimum-line-height;
        }
    }

    h5 {
        text-transform: uppercase;
        font-size: 1em;
        font-weight: 500;
        margin-top: 0;
        margin-bottom: 1rem;
        @include breakpoint(mobile) {
            margin-bottom: .5em;
        }
    }
    nav {
        display: flex;
        flex-direction: column;
        @include breakpoint(tablet) {
            gap: .5rem;
        }
    }
}

.lang-selection {
    display: flex;
    gap: .5rem;
}
:is(header, footer) {
    .en, .zh {
        opacity: .8;

        &:hover {
            opacity: 1;
            font-weight: 700;
        }
    }
}
html[lang^="en"] :is(header,footer) .en,
html[lang^="zh"] :is(header,footer) .zh {
    opacity: 1;
    font-weight: 700;
}

main:not(.standard-block) {
    :is(ul, ol) {
        padding-left: 1.5em;
    }
    > :is(ul, ol) {
        @include standard-block-behavior($additional-left-padding: 1.5em);
    }
    > :is(p, h1, h2, h3, h4, h5, h6) {
        @include standard-block-behavior;
    }
    p, > :is(ul, ol) {
        margin-block-start: 1em;
        margin-block-end: 1em;
    }
}

.standard-block {
    @include standard-block-behavior;

    > :is(ul, ol, p), > div > :is(ul, ol, p), > div > div > :is(ul, ol, p), dd, table, details {
        max-width: $default-max-copy-width;
        margin-left: $standard-block-margin-left;
        @include breakpoint(mobile) {
            max-width: initial;
            margin-left: 0;
        }
    }

    .highlight-box {
        :is(ul, ol) {
            margin-left: 0;
        }
        @include breakpoint(tablet) {
            max-width: $default-max-copy-width;
            margin-left: $standard-block-margin-left;
        }
        @include breakpoint(mobile) {
            max-width: initial;
            margin-left: 0;
        }
    }
}

a {
    color: $link-color; //$body-color;
    text-underline-offset: .3em;
    &:link, &:active, &:visited {
        text-decoration-thickness: 1px;
        text-decoration-color: #{$brand-blue}80;
    }

    img {
        transition: $animation-length border-color;
    }

    &:hover {
        color: $link-hover-color;
        text-decoration-color: #{$link-hover-color}80;
        img {
            transition: $animation-length border-color;
        }
    }
}
a, input, button, summary {
    transition: $animation-length color, $animation-length background-color, $animation-length background, $animation-length border;
    &:hover {
        transition: $animation-length color, $animation-length background-color, $animation-length background, $animation-length border, $animation-length text-decoration-color;
    }
}
img[data-jslghtbx] {
    border: $border-style;
    &:hover {
        border-color: $brand-light-blue;
    }
    cursor: pointer;
}

.background-image-container {
    position: relative;
    overflow: hidden;

    > img:first-child {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: -1;

        object-fit: cover;
    }

    &.parallax > img:first-child {
        transform: scale(1.2);
    }
}

.highlight-box {
    width: $sidebar-width;
    margin-left: $sidebar-margin-left;
    margin-bottom: $sidebar-margin-bottom;
    float: right;
    @include breakpoint(mobile) {
        float: initial;
    }

    h5 {
        display: inline-block;
    }
    p:first-child {
        margin-block-start: 0;
    }
    p:last-child {
        margin-block-end: 0;
    }

    &:not(.image) {
        border-left: $border-style;
        margin-left: 1rem;
        padding-left: 1em;
        padding-bottom: 2em;
        @include breakpoint(mobile) {
            margin-left: 0;
            padding-bottom: 0;
        }
    }

    &.colored {
        background: linear-gradient(to bottom, #FAD170, #{$brand-light-yellow});
        padding: 1em;
        border-radius: $border-radius-large;
        border-left: 0;
        @include breakpoint(tablet) {
            display: block;
            width: auto;
            float: initial;
            margin-left: $standard-block-margin-left;
        }
        @include breakpoint(mobile) {
            margin-left: 0;
        }
    }

    ul#markdown-toc {
        &, ul {
            list-style: none;
        }
        li::before {
            content: "\2022";
            color: $brand-blue;
            font-weight: bold;
            display: inline-block;
            width: 1em;
            margin-left: -1em;
        }
        ul {
            display: none;
        }
    }

    &.show-second-level ul#markdown-toc > li > ul {
        display: block;
    }

    &:is(ul) {
        line-height: $minimum-line-height;
        list-style-type: none;
        > li:not(:first-child) {
            margin-top: 1.2em;
        }
        .parenthetical {
            font-size: .9em;
        }
        :not(.description) div:last-child {
            margin-top: .2em;
            margin-left: 0;
            font-weight: 600;
        }
        &:not(html[lang="zn-cn"] *) .parenthetical:before {
            content: " ";
        }
        &:is(html[lang="zh-cn"] *) {
            h5, .parenthetical {
                display: inline;
            }
            .parenthetical {
                font-size: unset;
            }
        }
        ul {
            list-style-type: disc;
        }
        @include breakpoint(tablet) {
            h5, div {
                display: inline;
            }
            li:not(.buttons) > *:nth-last-child(2):after {
                content: ": ";
                font-size: 1.05rem;
            }
            li:not(.buttons):where(html[lang="zh-cn"] *) > *:nth-last-child(2):after {
                content: "：";
            }
            ul {
                list-style-type: none;
                display: inline;
                margin: 0;
                padding: 0;
                li {
                    display: inline;
                    &:not(:first-child)::before {
                        content: ", "
                    }
                }
            }
        }
        li.buttons {
            display: flex;
            gap: 1em;
            flex-wrap: wrap;
        }
    }

    &.image {
        clear: right;
        img {
            width: 100%;
            border-radius: $border-radius-large;
        }
        @include breakpoint(tablet) {
            display: block;
            width: auto;
            float: initial;
            margin-top: 1em;
            margin-left: auto;
            margin-right: auto;
            img {
                width: auto;
                max-width: 100%;
                max-height: 80vh;
                display: block;
                margin-left: auto;
                margin-right: auto;
            }
        }
        @include breakpoint(mobile) {
            img {
                max-width: 100%;
            }
        }
    }
}

.address {
    line-height: $minimum-line-height;
}

.button {
    text-decoration: none;
    display: inline-block;
    padding: .35em 1.5em;
    background: linear-gradient(to bottom right, #A5DEE8, #9FD8ED);
    color: $brand-blue;
    border: border-style-with-color($brand-blue);
    border-radius: 5em;
    text-transform: uppercase;
    line-height: $standard-line-height;

    &:hover {
        background: linear-gradient(to bottom right, #037587, #{$brand-blue});
        color: $brand-lighter-yellow;
    }

    &.disabled {
        cursor: default;
        filter: saturate(0);
        &:hover {
            background: linear-gradient(to bottom right, #A5DEE8, #9FD8ED);
            color: $brand-blue;
        }
    }
}

details {
    $details-padding: 1rem;

    position: relative;
    border: $border-style;
    border-radius: $border-radius-small;
    &[open] {
        border-color: $brand-blue;
    }

    .summary-title {
        user-select: none;
        width: 100%;
    }

    &:hover {
        cursor: pointer;
    }

    .details-content {
        cursor: default;
        padding-left: $details-padding;
        padding-right: $details-padding;
        border-top: $border-style;
     }

    summary {
        list-style: none;
        font-size: .9em;
        text-transform: uppercase;
        letter-spacing: .1em;
        padding: $details-padding/2 $details-padding;
        border-radius: calc(#{$border-radius-small} - 1px);
        &:hover {
            background-color: $summary-hover-color;
        }

        .summary-title {
            display: inline-block;
        }

        &:focus {
            outline: none;
        }
    }

    &[open] summary {
        background-color: $brand-blue;
        color: $background-color;
        border-radius: calc(#{$border-radius-small} - 1px) calc(#{$border-radius-small} - 1px) 0 0;
    }
    &[open] .details-content {
        border-top: border-style-with-color($brand-blue);
    }

    .summary-chevron-up svg {
        opacity: 0.6;
    }
    summary:hover .summary-chevron-up svg {
        opacity: 1;
    }

    &[open] .summary-chevron-up svg,
    &[open] summary:hover .summary-chevron-up svg {
        opacity: 0;
    }

    .summary-chevron-up,
    .summary-chevron-down {
        pointer-events: none;
        position: absolute;
        top: $details-padding/2;
        right: $details-padding;

        svg {
            display: block;
        }
    }

    summary::-webkit-details-marker {
        display: none;
    }
}

#cancellation-schedule {
    display: grid;
    border-top: $border-style;
    border-left: $border-style;
    border-right: $border-style;
    max-width: 50em;
    grid-template-columns: auto auto;
    margin-left: $standard-block-margin-left;
    @include breakpoint(mobile) {
        grid-template-columns: 1fr;
        margin-left: 0;
    }
    > * {
        padding: .5rem 1rem;
        border-bottom: $border-style;
    }
    .dateline {
        font-family: $brand-font;
        background-color: $brand-blue;
        color: $background-color;
        border-bottom: border-style-with-color($background-color);
        &:nth-last-child(2) {
            border-bottom-color: $brand-blue;
        }
    }
    p {
        margin: 0;
        max-width: initial;
    }
}

$arrow-color: $brand-light-blue;
$arrow-hover-color: $brand-light-yellow;
#jslghtbx {
    z-index: 20;
}
.jslghtbx-caption {
    margin-top: 1rem;
}
.jslghtbx-close {
    width: 1.67em;
    height: 1.67em;
    position: absolute;
    top: 0;
    text-align: center;
    line-height: 1.67em;
    margin-top: 0;
    color: $arrow-color;
    transition: color $animation-length;

    &:hover {
        text-shadow: none;
        color: $arrow-hover-color;
        transition: color $animation-length;
    }
}
.jslghtbx.jslghtbx-active {
    background-color: rgba(253, 250, 246, 0.7);
    @include backdrop-filter(blur(10px));
}
.jslghtbx-contentwrapper > img {
    background: black;
    padding: 0;
    box-shadow: 0 0.2em 1em rgba(34, 26, 16, 0.6);
}
.jslghtbx-next, .jslghtbx-prev {
    width: 3em;
    height: 10em;

    &:before {
        content: "";
        position: absolute;
        top: 50%;
        margin-top: -.8em;
        border: .8em solid transparent;
    }
}
.jslghtbx-next {
    &:before, &:hover:before {
        transition: border-color $animation-length;
    }

    &.jslghtbx-no-img {
        border: 0;
    }

    &:hover:before {
        border-left-color: $arrow-hover-color;
    }
    &:before {
        right: 0;
        border-left-color: $arrow-color;
    }
}
.jslghtbx-prev {
    &:before, &:hover:before {
        transition: border-color $animation-length;
    }

    &.jslghtbx-no-img {
        border: 0;
    }

    &:hover:before {
        border-right-color: $arrow-hover-color;
    }
    &:before {
        left: 0;
        border-right-color: $arrow-color;
    }
}
